;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.3 Standard
;Project :
;Version :
;Date    : 2/20/2013
;Author  : msi
;Company : zolfigol
;Comments:
;Chip type               : ATmega16A
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*****************************************************/
;// ___***IN THE NAME OF GOD***____
;#include <mega16a.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;# include <stdlib.h>
;#include <delay.h>
;#include <spi.h>
;#include <mega16a.h>
;#include <stdio.h>
;// Alphanumeric LCD functions
;#include <alcd.h>
;#define ADC_VREF_TYPE 0x40
;#define c1 PIND.4
;#define c2 PIND.5
;#define c3 PIND.6
;#define ADC_VREF_TYPE 0x40
;#asm
;PCODE: $0000000D VOL: 0
.equ __lcd_port=0x1B ;PORTC
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0021 #endasm
;unsigned char scan[4]={0XFE,0XFD,0XFB,0XF7};

	.DSEG
;unsigned char arrkey[12]={1,2,3,4,5,6,7,8,9,17,0,15};
;unsigned char key=19;
;unsigned char red[2],counter=0;
;unsigned char keypad()
; 0000 0027 {

	.CSEG
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0028     unsigned char r,b,t;
; 0000 0029     for (r=0; r<4; r++){
;PCODE: $00000012 VOL: 0
;	r -> R17
;	b -> R16
;	t -> R19
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 002A         b=4;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 002B         t=r;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 002C         c1=1;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 002D         c2=1;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 002E         c3=1;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 002F         PORTD=scan[r];
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0030         if(c1==0) {b=1; t--; }
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0031         if(c2==0) b=2;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0032         if(c3==0) b=3;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0033 
; 0000 0034 
; 0000 0035 
; 0000 0036         if (!(b==4)){
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0037             key=arrkey[((t*3)+(b-1))];
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0038             while(c1==0);
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0039             while(c2==0);
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 003A             while(c3==0);
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 003B             delay_ms(30);
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 003C 
; 0000 003D             return key;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 003E 
; 0000 003F         }
; 0000 0040     }
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0041     key=19;
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0042 }
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;
;// Read the AD conversion result
;unsigned int read_adc(unsigned char adc_input)
; 0000 0046 {
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0047 ADMUX=adc_input | (ADC_VREF_TYPE & 0xff);
;PCODE: $00000072 VOL: 0
;	adc_input -> Y+0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 0048 // Delay needed for the stabilization of the ADC input voltage
; 0000 0049 delay_us(10);
;PCODE: $00000076 VOL: 0
; 0000 004A // Start the AD conversion
; 0000 004B ADCSRA|=0x40;
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 004C // Wait for the AD conversion to complete
; 0000 004D while ((ADCSRA & 0x10)==0);
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 004E ADCSRA|=0x10;
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 004F return ADCW;
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 0050 }
;PCODE: $00000084 VOL: 0
;
;// Declare your global variables here
;char r[4];
;char* x;
;int p;
;char lcd_buffer[33],g;
;void main(void)
; 0000 0058 {  char buffer[16];
;PCODE: $00000085 VOL: 0
; 0000 0059 int i=0;
; 0000 005A int m1=0;
; 0000 005B float v;                    //jerm cold
; 0000 005C int m2=0;               //jerm hot
; 0000 005D int c=4200;           //zarfiat garmaee water
; 0000 005E int p=1000;         //chegali water
; 0000 005F int q1=0;           //damaye cold water
; 0000 0060 int q2=0;         //damaye hot water
; 0000 0061 float t=2.4;     //zaman baz shodan kole ab
; 0000 0062 int q3=0;       //damaye karbar
; 0000 0063 int j=0;
; 0000 0064 char lcd_buff[10];
; 0000 0065 char lcd_buffe[33];
; 0000 0066 char lcd_buffes[33];
; 0000 0067 int adc_in;
; 0000 0068 float temp,temps;
; 0000 0069 char str[10],lcd[10];
; 0000 006A float tf;
; 0000 006B int d,z;
; 0000 006C // Declare your local variables here
; 0000 006D 
; 0000 006E // Input/Output Ports initialization
; 0000 006F // Port A initialization
; 0000 0070 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0071 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0072 PORTA=0x00;
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;	buffer -> Y+134
;	i -> R16,R17
;	m1 -> R18,R19
;	v -> Y+130
;	m2 -> R20,R21
;	c -> Y+128
;	p -> Y+126
;	q1 -> Y+124
;	q2 -> Y+122
;	t -> Y+118
;	q3 -> Y+116
;	j -> Y+114
;	lcd_buff -> Y+104
;	lcd_buffe -> Y+71
;	lcd_buffes -> Y+38
;	adc_in -> Y+36
;	temp -> Y+32
;	temps -> Y+28
;	str -> Y+18
;	lcd -> Y+8
;	tf -> Y+4
;	d -> Y+2
;	z -> Y+0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 0073 DDRA=0x00;
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 0074 
; 0000 0075 // Port B initialization
; 0000 0076 // Func7=In Func6=In Func5=In Func4=In Func3=Out Func2=In Func1=In Func0=In
; 0000 0077 // State7=T State6=T State5=T State4=T State3=0 State2=T State1=T State0=T
; 0000 0078 PORTB=0x00;
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 0079 DDRB=0xFF;
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 007A 
; 0000 007B // Port C initialization
; 0000 007C // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 007D // State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 007E PORTC=0x00;
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 007F DDRC=0xFF;
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 0080 
; 0000 0081 // Port D initialization
; 0000 0082 // Func7=Out Func6=In Func5=In Func4=In Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 0083 // State7=0 State6=T State5=T State4=T State3=0 State2=0 State1=0 State0=0
; 0000 0084 PORTD=0x00;
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 0085 DDRD=0x0F;
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0086 
; 0000 0087 // Timer/Counter 0 initialization
; 0000 0088 // Clock source: System Clock
; 0000 0089 // Clock value: Timer 0 Stopped
; 0000 008A // Mode: Fast PWM top=0xFF
; 0000 008B // OC0 output: Disconnected
; 0000 008C TCCR0=0x3B;
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 008D TCNT0=0x00;
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 008E   OCR0=0x255;
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 008F 
; 0000 0090 // Timer/Counter 1 initialization
; 0000 0091 // Clock source: System Clock
; 0000 0092 // Clock value: Timer1 Stopped
; 0000 0093 // Mode: Normal top=0xFFFF
; 0000 0094 // OC1A output: Discon.
; 0000 0095 // OC1B output: Discon.
; 0000 0096 // Noise Canceler: Off
; 0000 0097 // Input Capture on Falling Edge
; 0000 0098 // Timer1 Overflow Interrupt: Off
; 0000 0099 // Input Capture Interrupt: Off
; 0000 009A // Compare A Match Interrupt: Off
; 0000 009B // Compare B Match Interrupt: Off
; 0000 009C TCCR1A=0x00;
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 009D TCCR1B=0x00;
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 009E TCNT1H=0x00;
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 009F TCNT1L=0x00;
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 00A0 ICR1H=0x00;
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 00A1 ICR1L=0x00;
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 00A2 OCR1AH=0x00;
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 00A3 OCR1AL=0x00;
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 00A4 OCR1BH=0x00;
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0000 00A5 OCR1BL=0x00;
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 00A6 
; 0000 00A7 // Timer/Counter 2 initialization
; 0000 00A8 // Clock source: System Clock
; 0000 00A9 // Clock value: 125.000 kHz
; 0000 00AA // Mode: Fast PWM top=0xFF
; 0000 00AB // OC2 output: Disconnected
; 0000 00AC ASSR=0x00;
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0000 00AD TCCR2=0x4C;
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 00AE TCNT2=0x00;
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 00AF OCR2=0x255;
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0000 00B0 
; 0000 00B1 // External Interrupt(s) initialization
; 0000 00B2 // INT0: Off
; 0000 00B3 // INT1: Off
; 0000 00B4 // INT2: Off
; 0000 00B5 MCUCR=0x00;
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0000 00B6 MCUCSR=0x00;
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0000 00B7 
; 0000 00B8 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 00B9 TIMSK=0x00;
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0000 00BA 
; 0000 00BB // USART initialization
; 0000 00BC // USART disabled
; 0000 00BD UCSRB=0x00;
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0000 00BE 
; 0000 00BF // Analog Comparator initialization
; 0000 00C0 // Analog Comparator: Off
; 0000 00C1 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 00C2 ACSR=0x80;
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 00C3 SFIOR=0x00;
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 00C4 
; 0000 00C5 // ADC initialization
; 0000 00C6 // ADC Clock frequency: 1000.000 kHz
; 0000 00C7 // ADC Voltage Reference: AVCC pin
; 0000 00C8 // ADC Auto Trigger Source: Free Running
; 0000 00C9 ADMUX=ADC_VREF_TYPE & 0xff;
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0000 00CA ADCSRA=0x86;
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
; 0000 00CB SFIOR&=0x1F;
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0000 00CC 
; 0000 00CD // SPI initialization
; 0000 00CE // SPI disabled
; 0000 00CF SPCR=0x00;
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0000 00D0 
; 0000 00D1 // TWI initialization
; 0000 00D2 // TWI disabled
; 0000 00D3 TWCR=0x00;
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0000 00D4 
; 0000 00D5 // Alphanumeric LCD initialization
; 0000 00D6 // Connections are specified in the
; 0000 00D7 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 00D8 // RS - PORTC Bit 0
; 0000 00D9 // RD - PORTC Bit 1
; 0000 00DA // EN - PORTC Bit 2
; 0000 00DB // D4 - PORTC Bit 4
; 0000 00DC // D5 - PORTC Bit 5
; 0000 00DD // D6 - PORTC Bit 6
; 0000 00DE // D7 - PORTC Bit 7
; 0000 00DF // Characters/line: 16
; 0000 00E0 lcd_init(16);
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
; 0000 00E1 #asm("sei")
;PCODE: $000000DC VOL: 0
	sei
;PCODE: $000000DD VOL: 0
; 0000 00E2 while (1)
;PCODE: $000000DE VOL: 0
; 0000 00E3       {
; 0000 00E4       // Place your code here
; 0000 00E5         i++;
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 00E6         q1=read_adc(0);
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
; 0000 00E7         temp = ((q1 * 5000.0) / 1023 - 273);
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 00E8         lcd_gotoxy(0,0);
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0000 00E9         sprintf(lcd_buffe,"T=%3.2f",temp);
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0000 00EA         lcd_puts(lcd_buffe);
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0000 00EB         delay_ms(100);
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
; 0000 00EC         q2=read_adc(1);
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
; 0000 00ED         temps = ((q2 * 5000.0) / 1023 - 273);
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
; 0000 00EE         lcd_gotoxy(8,0);
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
; 0000 00EF         sprintf(lcd_buffes,"T=%3.2f",temps);
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
; 0000 00F0         lcd_puts(lcd_buffes);
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
; 0000 00F1         delay_ms(100);
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
; 0000 00F2         keypad();
;PCODE: $00000127 VOL: 0
; 0000 00F3 
; 0000 00F4 
; 0000 00F5 
; 0000 00F6         if (key!=19)
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
; 0000 00F7         {
; 0000 00F8                  if (key!=15)
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
; 0000 00F9                 {
; 0000 00FA                 red[counter]=key;
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
; 0000 00FB                 counter++;
;PCODE: $00000132 VOL: 0
; 0000 00FC                 if (counter==3)
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
; 0000 00FD                 counter=0;
;PCODE: $00000136 VOL: 0
; 0000 00FE                 }
;PCODE: $00000137 VOL: 0
; 0000 00FF             if (key==15)
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0000 0100             {
; 0000 0101             counter=0;
;PCODE: $0000013C VOL: 0
; 0000 0102             q3=red[1]*10+red[0];
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
; 0000 0103                 itoa(q3,x);
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0000 0104 
; 0000 0105             j=(q3-q1)/(q2-q3);
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
; 0000 0106             v=t/j;
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
; 0000 0107             PORTB.1=1;
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
; 0000 0108                if(q3>=90)
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
; 0000 0109                delay_ms(100);
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
; 0000 010A              else if(q3>=80)
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
; 0000 010B                delay_ms(300);
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
; 0000 010C                 else if(q3>=70 && q3<=79)
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
; 0000 010D                  delay_ms(400);
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
; 0000 010E                 else if(q3>=60 && q3<=69)
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
; 0000 010F                   delay_ms(500);
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
; 0000 0110                 else if(q3>=50 && q3<=59)
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
; 0000 0111                  delay_ms(600);
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
; 0000 0112                 else if(q3>=40 && q3<=49)
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
; 0000 0113                   delay_ms(700);
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
; 0000 0114                 else if(q3>=30 && q3<=39)
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
; 0000 0115                   delay_ms(720);
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
; 0000 0116                 else if(q3>=20 && q3<=29)
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
; 0000 0117                   delay_ms(2600);
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
; 0000 0118 
; 0000 0119             PORTB.1=0;
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
; 0000 011A             PORTB.0=0;
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
; 0000 011B             PORTB.7=1; if(q3>25){
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
; 0000 011C             delay_ms(2600);
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
; 0000 011D             PORTB.7=0;}
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
; 0000 011E                 else if(q3<=25){  delay_ms(50);
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
; 0000 011F                 PORTB.7=0;}
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
; 0000 0120             PORTB.6=0;
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
; 0000 0121             }
; 0000 0122 
; 0000 0123               if(key==17)
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
; 0000 0124             { q3=red[1]*10+red[0];
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
; 0000 0125                 itoa(q3,r);
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
; 0000 0126                 PORTB.0=0;
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
; 0000 0127                 PORTB.1=1;
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
; 0000 0128                 PORTB.6=0;
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
; 0000 0129                 PORTB.7=1;
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
; 0000 012A                 lcd_gotoxy(13,1);
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
; 0000 012B                 lcd_puts(r); }
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
; 0000 012C 
; 0000 012D 
; 0000 012E 
; 0000 012F 
; 0000 0130 
; 0000 0131             //matne keypad
; 0000 0132         sprintf(buffer,"%d",red[1]);
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
; 0000 0133         lcd_gotoxy(4,1);
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
; 0000 0134         lcd_puts(buffer);
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
; 0000 0135         sprintf(buffer,"%d",red[0]);
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
; 0000 0136         lcd_puts(buffer);
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
; 0000 0137         lcd_gotoxy(0,1);
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
; 0000 0138          }
; 0000 0139       };
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
; 0000 013A }
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
